knitr::opts_chunk$set(echo = TRUE)
data2<-cor(data)
library(readxl)
data2 <- read_excel("C:/data2.xls")
View(data2)
library(correlation)
matriz <-correlation(data)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
cor <- abs(cor(x, y))
txt <- paste0(prefix, format(c(cor, 0.123456789), digits = digits)[1])
if(missing(cex.cor)) {
cex.cor <- 0.4 / strwidth(txt)
}
text(0.5, 0.5, txt,
cex = 1 + cex.cor * cor)
}
pairs(data,
upper.panel = panel.cor ,
lower.panel = panel.smooth)
data2<-cor(data)
data2<-cor(data)
data2 <- as.data.frame(read_excel("C:/data2.xls"))
data2 <- as.data.frame(read_excel("C:/data2.xls"))
data2<-cor(data)
data2<-cor(data)
data2<-cor(data)
data2<-cor(data)
data2<-cor(data)
data2<-cor(data)
data2<-cor(data)
data<-cor(data)
data<-cor(data)
data2<-cor(data)
library(readxl)
data2 <- read_excel("C:/data2.xls")
View(data2)
knitr::opts_chunk$set(echo = TRUE)
library(correlation)
resultados <- correlation(data)
library(correlation)
resultados <- correlation(data2)
resultados
library(ggpubr)
library(ggplot2)
ggscatter(data, x = "altura", y = "peso",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "altura piezas (mm)", ylab = "Peso piezas (mg)")
library(ggpubr)
ggscatter(data, x = "altura", y = "peso",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "altura piezas (mm)", ylab = "Peso piezas (mg)")
install.packages("closure")
library(ggpubr)
ggscatter(data2, x = "altura", y = "peso",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "altura piezas (mm)", ylab = "Peso piezas (mg)")
library(ggpubr)
library(ggplot2)
ggscatter(data2, x = "altura", y = "peso",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "altura piezas (mm)", ylab = "Peso piezas (mg)")
library(ggpubr)
ggscatter(data2, x = "altura", y = "peso",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "altura piezas (mm)", ylab = "Peso piezas (mg)")
library(ggpubr)
library(ggplot2)
ggscatter(data2, x = "altura", y = "peso",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "altura piezas (mm)", ylab = "Peso piezas (mg)")
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
cor <- abs(cor(x, y))
txt <- paste0(prefix, format(c(cor, 0.123456789), digits = digits)[1])
if(missing(cex.cor)) {
cex.cor <- 0.4 / strwidth(txt)
}
text(0.5, 0.5, txt,
cex = 1 + cex.cor * cor)
}
pairs(data,
upper.panel = panel.cor ,
lower.panel = panel.smooth)
data2<-cor(data)
data2<-cor(data2)
print(data2)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
cor <- abs(cor(x, y))
txt <- paste0(prefix, format(c(cor, 0.123456789), digits = digits)[1])
if(missing(cex.cor)) {
cex.cor <- 0.4 / strwidth(txt)
}
text(0.5, 0.5, txt,
cex = 1 + cex.cor * cor)
}
pairs(data,
upper.panel = panel.cor ,
lower.panel = panel.smooth)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
cor <- abs(cor(x, y))
txt <- paste0(prefix, format(c(cor, 0.123456789), digits = digits)[1])
if(missing(cex.cor)) {
cex.cor <- 0.4 / strwidth(txt)
}
text(0.5, 0.5, txt,
cex = 1 + cex.cor * cor)
}
pairs(data,
upper.panel = panel.cor ,
lower.panel = panel.smooth)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
cor <- abs(cor(x, y))
txt <- paste0(prefix, format(c(cor, 0.123456789), digits = digits)[1])
if(missing(cex.cor)) {
cex.cor <- 0.4 / strwidth(txt)
}
text(0.5, 0.5, txt,
cex = 1 + cex.cor * cor)
}
pairs(data2,
upper.panel = panel.cor ,
lower.panel = panel.smooth)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
corrplot(cor(data))
library(readxl)
data2 <- read_excel("C:/data2.xls")
View(data2)
library(corrplot)
corrplot(cor(data))
library(corrplot)
corrplot(cor(data2))
distancia <- c(1.1,100.2,90.3,5.4,57.5,6.6,34.7,65.8,57.9,86.1)
n_piezas <- c(110,2,6,98,40,94,31,5,8,10)
dist_ncuent <- data.frame(distancia,n_piezas)
knitr::kable(dist_ncuent)
cor.test(dist_ncuent$distancia, dist_ncuent$n_piezas)
correlacion_datos_2 <- cor(dist_ncuent)
print(correlacion_datos_2)
print(data2)
data2<-cor(data2)
print(data2)
data2<-cor(data2)
print(data2)
data2<-cor(data)
data2<-cor(data2)
print(data2)
data2<-cor(data2)
print(data2)
cor(data2)
data_correlacion
datos_1 <- as.data.frame(read_excel("C:/data2.xls"))
datos_1 <- as.data.frame(read_excel("C:/datos_1.xls"))
library(readxl)
datos_1 <- read_excel("C:/datos_1.xls")
View(datos_1)
nuevo_dir<- "C:/correlacionpractica"
setwd(nuevo_dir)
datos_1 <- as.data.frame(read_excel("C:/datos_1.xls"))
knitr::opts_chunk$set(echo = TRUE)
datos_1 <-cor(data)
datos_1 <-cor(data)
datos_1 <-cor(data)
data2<-cor(data2)
knitr::opts_chunk$set(echo = TRUE)
data2<-cor(data2)
print(data2)
library(correlation)
matriz <- correlation(data2)
library(readxl)
data2 <- read_excel("C:/data2.xls")
View(data2)
library(correlation)
matriz <- correlation(data2)
matriz
library(ggpubr)
library(ggplot2)
ggscatter(data2, x = "altura", y = "peso",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "altura piezas (mm)", ylab = "Peso piezas (mg)")
library(corrplot)
corrplot(cor(data2))
library(corrplot)
corrplot(cor(data2))
distancia <- c(1.1,100.2,90.3,5.4,57.5,6.6,34.7,65.8,57.9,86.1)
n_piezas <- c(110,2,6,98,40,94,31,5,8,10)
dist_ncuent <- data.frame(distancia,n_piezas)
knitr::kable(dist_ncuent)
cor.test(dist_ncuent$distancia, dist_ncuent$n_piezas)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
cor <- abs(cor(x, y))
txt <- paste0(prefix, format(c(cor, 0.123456789), digits = digits)[1])
if(missing(cex.cor)) {
cex.cor <- 0.4 / strwidth(txt)
}
text(0.5, 0.5, txt,
cex = 1 + cex.cor * cor)
}
pairs(data2,
upper.panel = panel.cor ,
lower.panel = panel.smooth)
